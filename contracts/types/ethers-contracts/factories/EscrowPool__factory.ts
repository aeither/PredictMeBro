/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { EscrowPool, EscrowPoolInterface } from "../EscrowPool.js";

  const _abi = [
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "creatorName",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "poolPrize",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "startTime",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "endTime",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "creator",
        "type": "address"
      }
    ],
    "name": "PoolCreated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "winningVote",
        "type": "bool"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "totalWinners",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "totalWinnerAmount",
        "type": "uint256"
      }
    ],
    "name": "PoolResolved",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "participant",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "RewardClaimed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "participant",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "vote",
        "type": "bool"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "VoteCast",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "CREATOR_FEE_PERCENT",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      }
    ],
    "name": "claimCreatorFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      }
    ],
    "name": "claimReward",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "_creatorName",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "_price",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_startTime",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_endTime",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "_walrusHash",
        "type": "string"
      }
    ],
    "name": "createPool",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "participant",
        "type": "address"
      }
    ],
    "name": "getClaimableAmount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      }
    ],
    "name": "getParticipantCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "participant",
        "type": "address"
      }
    ],
    "name": "getPoolInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "creatorName",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "poolPrize",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "poolBalance",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "startTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endTime",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          },
          {
            "internalType": "address",
            "name": "creator",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "walrusHash",
            "type": "string"
          },
          {
            "internalType": "bool",
            "name": "isResolved",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "winningVote",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "totalWinners",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalWinnerAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "claimedAmount",
            "type": "uint256"
          }
        ],
        "internalType": "struct EscrowPool.Pool",
        "name": "",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "participantCount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "claimableAmount",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "voted",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      }
    ],
    "name": "getPoolParticipants",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "participant",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "vote",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "hasClaimed",
            "type": "bool"
          }
        ],
        "internalType": "struct EscrowPool.Participant[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      }
    ],
    "name": "getPoolWalrusHash",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTotalPools",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      }
    ],
    "name": "getVoteCounts",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "yesVotes",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "noVotes",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "hasVoted",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "participantIndex",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "poolCounter",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "poolParticipants",
    "outputs": [
      {
        "internalType": "address",
        "name": "participant",
        "type": "address"
      },
      {
        "internalType": "bool",
        "name": "vote",
        "type": "bool"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "hasClaimed",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "pools",
    "outputs": [
      {
        "internalType": "string",
        "name": "creatorName",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "poolPrize",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "poolBalance",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "startTime",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "endTime",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "isActive",
        "type": "bool"
      },
      {
        "internalType": "address",
        "name": "creator",
        "type": "address"
      },
      {
        "internalType": "string",
        "name": "walrusHash",
        "type": "string"
      },
      {
        "internalType": "bool",
        "name": "isResolved",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "winningVote",
        "type": "bool"
      },
      {
        "internalType": "uint256",
        "name": "totalWinners",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "totalWinnerAmount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "claimedAmount",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "_winningVote",
        "type": "bool"
      }
    ],
    "name": "resolvePool",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "poolId",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "_vote",
        "type": "bool"
      }
    ],
    "name": "vote",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60806040523461001a5760405161252d61001f823961252d90f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c8063136c467114610130578063438596321461012b57806347fa7003146101265780635315cc641461012157806378c5195e1461011c57806386ae5fec146101175780638a241f4c146101125780639e3079cb1461010d578063ac4afa3814610108578063ace2589514610103578063ae169a50146100fe578063b340da9c146100f9578063bebc25e9146100f4578063c72898a1146100ef578063c9d27afe146100ea578063cf80bfe5146100e5578063d3ffe67a146100e05763da23eb63036101e157610c76565b610c49565b610c22565b610b54565b610b22565b6109e1565b6109b8565b6109a0565b610984565b61092b565b610659565b610600565b6105ce565b61059e565b61056c565b6103f7565b610391565b61028c565b634e487b7160e01b5f52604160045260245ffd5b90601f01601f1916810190811067ffffffffffffffff82111761016b57604052565b610135565b9061018461017d60405190565b9283610149565b565b67ffffffffffffffff811161016b57602090601f01601f19160190565b0190565b90825f939282370152565b909291926101c76101c282610186565b610170565b938185526020850190828401116101e157610184926101a7565b5f80fd5b9080601f830112156101e157816020610200933591016101b2565b90565b805b036101e157565b9050359061018482610203565b91909160a0818403126101e157803567ffffffffffffffff81116101e157836102439183016101e5565b92610251816020840161020c565b9261025f826040850161020c565b9261026d836060830161020c565b92608082013567ffffffffffffffff81116101e15761020092016101e5565b6102b76102a661029d366004610219565b93929092610e85565b6040515b9182918290815260200190565b0390f35b6001600160a01b031690565b6001600160a01b038116610205565b90503590610184826102c7565b91906040838203126101e157610200906102fd818561020c565b936020016102d6565b6102006102006102009290565b9061031d90610306565b5f5260205260405f2090565b610200906102bb906001600160a01b031682565b61020090610329565b6102009061033d565b9061031d90610346565b610200916008021c5b60ff1690565b906102009154610359565b61038c610200926103876002935f94610313565b61034f565b610368565b346101e1576102b76103ad6103a73660046102e3565b90610373565b60405191829182901515815260200190565b801515610205565b90503590610184826103bf565b91906040838203126101e157610200906103ee818561020c565b936020016103c7565b346101e15761041061040a3660046103d4565b906119fd565b604051005b91906040838203126101e1576102009061042f818561020c565b9360200161020c565b634e487b7160e01b5f52603260045260245ffd5b805482101561046c576104646004915f5260205f2090565b910201905f90565b610438565b610200906102bb565b6102009054610471565b6102009060a01c610362565b6102009054610484565b6102009081565b610200905461049a565b61020090610362565b61020090546104ab565b91906104cd6001935f94610313565b805482101561051b576104e192935061044c565b506104eb8161047a565b916104f582610490565b91610502600182016104a1565b916102006003610514600285016104a1565b93016104b4565b8380fd5b909594926101849461055d6105649261055660809661054d60a088019c5f8901906001600160a01b03169052565b15156020870152565b6040850152565b6060830152565b019015159052565b346101e1576102b7610588610582366004610415565b906104be565b9161059595939560405190565b9586958661051f565b346101e1576102b76102a66105b43660046102e3565b90611fa6565b906020828203126101e1576102009161020c565b346101e1576102b76102a66105e43660046105ba565b612311565b9081526040810192916101849160200152565b0152565b346101e1576106186106133660046105ba565b61234c565b906102b761062560405190565b928392836105e9565b5f9103126101e157565b610200916008021c81565b906102009154610638565b6102005f6004610643565b346101e15761066936600461062e565b6102b76102a661064e565b634e487b7160e01b5f52602260045260245ffd5b90600160028304921680156106a8575b60208310146106a357565b610674565b91607f1691610698565b80545f9392916106ce6106c483610688565b8085529360200190565b916001811690811561071d57506001146106e757505050565b6106f891929394505f5260205f2090565b915f925b8184106107095750500190565b8054848401526020909301926001016106fc565b92949550505060ff1916825215156020020190565b90610200916106b2565b906101846107569261074d60405190565b93848092610732565b0383610149565b6102009060081c6102bb565b610200905461075d565b6102009060081c610362565b6102009054610773565b610793905f610313565b9061079d8261073c565b916107aa600182016104a1565b916107b7600283016104a1565b916107c4600382016104a1565b916107d1600483016104a1565b916107de600582016104a1565b916107eb600683016104b4565b916107f860068201610769565b916108056007830161073c565b91610812600882016104b4565b9161081f6008830161077f565b9161082c600982016104a1565b91610200600b61083e600a85016104a1565b93016104a1565b5f5b8381106108565750505f910152565b8181015183820152602001610847565b6108876108906020936101a39361087b815190565b80835293849260200190565b95869101610845565b601f01601f191690565b9b999e9d9c9a9897959391969492906101c08d018d808203905f01526108bf91610866565b9660208d016108cc919052565b60408c015260608b015260808a015260a0890152151560c08801526001600160a01b031660e087015285810361010087015261090791610866565b96151561012085015215156101408401526101608301526101808201526101a00152565b346101e1576102b76109466109413660046105ba565b610789565b9a6109629e9c9e9a919a99929998939897949796959660405190565b9e8f9e8f61089a565b61097f610200926103876003935f94610313565b610643565b346101e1576102b76102a661099a3660046102e3565b9061096b565b346101e1576104106109b33660046105ba565b611beb565b346101e1576104106109cb3660046105ba565b611f30565b602080825261020092910190610866565b346101e1576102b76109fc6109f73660046105ba565b6124ec565b604051918291826109d0565b90610200906101a080610aaa610a2c6101c085015f8801518682035f880152610866565b610a3b60208801516020870152565b610a4a60408801516040870152565b610a5960608801516060870152565b610a6860808801516080870152565b610a7760a088015160a0870152565b60c08781015115159086015260e0878101516001600160a01b031690860152610100870151858203610100870152610866565b610120808701511515908501529461014081810151151590850152610ad6610160820151610160860152565b610ae7610180820151610180860152565b0151910152565b61056461018494610b1b610b136060959998969960808601908682035f880152610a08565b986020850152565b6040830152565b346101e1576102b7610b3e610b383660046102e3565b906122d6565b90610b4b94929460405190565b94859485610aee565b610410610b623660046103d4565b906115f2565b80516001600160a01b0316825261018491906080908190602081810151151590850152610b9a60408201516040860152565b610ba960608201516060860152565b01511515910152565b906101a38160a093610b68565b90610bdf610bd8610bce845190565b8084529260200190565b9260200190565b905f5b818110610bef5750505090565b909192610c09610c026001928651610bb2565b9460200190565b929101610be2565b602080825261020092910190610bbf565b346101e1576102b7610c3d610c383660046105ba565b6124a7565b60405191829182610c11565b346101e157610c5936600461062e565b6102b76102a66123e9565b6102006005610306565b610200610c64565b346101e157610c8636600461062e565b6102b76102a6610c6e565b15610c9857565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c69642074696d652072616e676560701b6044820152606490fd5b0390fd5b15610cdd57565b60405162461bcd60e51b815280610cd2600482016020808252818101527f53746172742074696d65206d75737420626520696e2074686520667574757265604082015260600190565b15610d2d57565b60405162461bcd60e51b815260206004820152602160248201527f506f6f6c207072697a65206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608490fd5b15610d8357565b60405162461bcd60e51b815260206004820152602a60248201527f50617274696369706174696f6e207072696365206d75737420626520677265616044820152690746572207468616e20360b41b6064820152608490fd5b634e487b7160e01b5f52601160045260245ffd5b5f198114610dfd5760010190565b610ddb565b905f19905b9181191691161790565b90610e21610200610e2892610306565b8254610e02565b9055565b9196959394610e6f61018496610e6860a096610e61610e59610e769760c08a01908a82035f8c0152610866565b9c6020890152565b6040870152565b6060850152565b6080830152565b01906001600160a01b03169052565b610e90848410610c91565b610e9b428411610cd6565b610f313494610ec6610ebf5f610eba610eb382610306565b8a11610d26565b610306565b8511610d7c565b610ef1610ed360046104a1565b97610ee7610ee08a610def565b6004610e11565b828787878c611263565b33907fd8fd61d8165e53968b1c04aa172a89e77533c76d5fc90c367ed5c7d21a12444395610f1e89610306565b97610f2860405190565b96879687610e2c565b0390a290565b6102006101c0610170565b634e487b7160e01b5f525f60045260245ffd5b915f1960089290920291821b911b610e07565b9190610f79610200610e2893610306565b908354610f55565b610184915f91610f68565b818110610f97575050565b80610fa45f600193610f81565b01610f8c565b9190601f8111610fb957505050565b610fc9610184935f5260205f2090565b906020601f840181900483019310610feb575b6020601f909101040190610f8c565b9091508190610fdc565b90610ffe815190565b9067ffffffffffffffff821161016b576110228261101c8554610688565b85610faa565b602090601f831160011461105b57610e2892915f9183611050575b50505f19600883021c1916906002021790565b015190505f8061103d565b601f1983169161106e855f5260205f2090565b925f5b8181106110aa57509160029391856001969410611092575b50505002019055565b01515f196008601f8516021c191690555f8080611089565b91936020600181928787015181550195019201611071565b9061018491610ff5565b9060ff90610e07565b151590565b906110ea610200610e2892151590565b82546110cc565b90610100600160a81b039060081b610e07565b90611114610200610e2892610346565b82546110f1565b9061ff009060081b610e07565b90611138610200610e2892151590565b825461111b565b906111746101a0600b610184946111625f820161115c5f88015190565b906110c2565b61117a60018201611174602088015190565b90610e11565b61118c60028201611174604088015190565b61119e60038201611174606088015190565b6111b060048201611174608088015190565b6111c26005820161117460a088015190565b6111f3600682016111df6111d960c0890151151590565b826110da565b60e08701516001600160a01b031690611104565b6112066007820161115c61010088015190565b61122c6008820161121e6111d9610120890151151590565b610140870151151590611128565b61123f6009820161117461016088015190565b611252600a820161117461018088015190565b0192015190565b906101849161113f565b929491939094349160019133935f9761127a610f37565b99898b01906112869152565b60208a01526112968160408b0152565b6060890152608088015260a0870152151560c08601526001600160a01b031660e085015261010084015281151561012084018190526101408401526112da82610306565b6112e681610160860152565b6112f281610180860152565b6101a084015261130191610313565b9061018491611259565b1561131257565b60405162461bcd60e51b8152602060048201526013602482015272141bdbdb08191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606490fd5b906101849161136a61136261020060046104a1565b825b1061130b565b611430565b1561137657565b60405162461bcd60e51b8152602060048201526012602482015271506f6f6c206973206e6f742061637469766560701b6044820152606490fd5b156113b757565b60405162461bcd60e51b8152602060048201526014602482015273141bdbdb081a185cc81b9bdd081cdd185c9d195960621b6044820152606490fd5b156113fa57565b60405162461bcd60e51b815260206004820152600e60248201526d141bdbdb081a185cc8195b99195960921b6044820152606490fd5b906101849161149a5f611456611451600661144b8685610313565b016104b4565b61136f565b61149361148f610200600561147c87429661148a611482610200600461147c8686610313565b016104a1565b8910156113b0565b610313565b9190565b11156113f3565b6114eb565b156114a657565b60405162461bcd60e51b815260206004820152601a60248201527f416c726561647920766f74656420696e207468697320706f6f6c0000000000006044820152606490fd5b906101849161151c61151761151361150e611507856002610313565b339061034f565b6104b4565b1590565b61149f565b611579565b1561152857565b60405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b90151581526040810192916101849160200152565b3490611598611590610200600161147c855f610313565b831015611521565b6115a2838261170e565b33916115d76115d17fcbdf6214089cba887ecbf35a0b6a734589959c9763342c756bb2a80ca2bc9f6e93610306565b93610346565b936115ed6115e460405190565b92839283611564565b0390a3565b906101849161134d565b61020060a0610170565b906001600160a01b0390610e07565b90611625610200610e2892610346565b8254611606565b9060ff60a01b9060a01b610e07565b9061164b610200610e2892151590565b825461162c565b61018491906116b99060809060039061168c8161167f61167988516001600160a01b031690565b82611615565b602087015115159061163b565b61169e60018201611174604088015190565b6116b060028201611174606088015190565b01920151151590565b906110da565b91906116ce5761018491611652565b610f42565b908154916801000000000000000083101561016b57826116fb9160016101849501815561044c565b906116bf565b91908201809211610dfd57565b6117cf610184926103876001936117c861172f61172b8388610313565b5490565b9361117460036117536117428683610313565b9761174e33809a61034f565b610e11565b6117b885611764610200828d610313565b9461148a8a34976117ab426117995f9661179061177f6115fc565b6001600160a01b0390971689880152565b15156020860152565b6117a48b6040860152565b6060840152565b83151560808301526116d3565b01916117c3836104a1565b611701565b6002610313565b6110da565b90610184916117e961136261020060046104a1565b611833565b156117f557565b60405162461bcd60e51b8152602060048201526016602482015275141bdbdb081a185cc81b9bdd08195b991959081e595d60521b6044820152606490fd5b90610184916118574261185161148f610200600561147c875f610313565b116117ee565b6118a8565b1561186357565b60405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920706f6f6c2063726561746f722063616e2063616c6c2074686973006044820152606490fd5b90610184916118df336118d96118cc6102bb60066118c6875f610313565b01610769565b916001600160a01b031690565b1461185c565b611947565b156118eb57565b60405162461bcd60e51b8152602060048201526015602482015274141bdbdb08185b1c9958591e481c995cdbdb1d9959605a1b6044820152606490fd5b90151581526060810193926101849290916040916105fc906020830152565b5f61196261195d611513600861144b8686610313565b6118e4565b611979600160086119738585610313565b016110da565b61198f8360086119898585610313565b01611128565b6119998383611a07565b6119b7600a61147c846119b1600961147c8388610313565b94610313565b926119f86119e57f81e6b9aeb45b7b979abe982f55228d49b2371682a58ecb437e590703d0f30a1594610306565b946119ef60405190565b93849384611928565b0390a2565b90610184916117d4565b91905f92611a1484610306565b9182906001611a2661172b8583610313565b85825b611a53575b50505050818561148a611a4d936009611a4d600a976101849a9b610313565b01610e11565b81811015611adb57611a7989611a7283611a6d8a88610313565b61044c565b5001610490565b611a868515155b91151590565b14611a9e575b90611a978392610def565b9091611a29565b959390611a97611ad1611ab18594610def565b96611acb85611ac48c611a6d8d84610313565b50016104a1565b90611701565b9791925050611a8c565b611a2e565b61018490611af461136261020060046104a1565b61018490611b114261185161148f610200600561147c875f610313565b611bb2565b15611b1d57565b60405162461bcd60e51b8152602060048201526015602482015274141bdbdb081b9bdd081c995cdbdb1d9959081e595d605a1b6044820152606490fd5b15611b6157565b60405162461bcd60e51b815260206004820152602360248201527f596f75206469646e277420706172746963697061746520696e207468697320706044820152621bdbdb60ea1b6064820152608490fd5b61018490611bcd611bc8600861144b845f610313565b611b16565b611be6611be161150e611507846002610313565b611b5a565b611c9c565b61018490611ae0565b15611bfb57565b60405162461bcd60e51b8152602060048201526024808201527f596f75206469646e277420766f746520666f72207468652077696e6e696e67206044820152637369646560e01b6064820152608490fd5b15611c5357565b60405162461bcd60e51b815260206004820152601660248201527514995dd85c9908185b1c9958591e4818db185a5b595960521b6044820152606490fd5b6040513d5f823e3d90fd5b600390611ca98183610313565b9080611d32611cdc611d2c611d26611cca611cc533809961034f565b6104a1565b611ce06001948592611a6d8985610313565b5090565b98611d0f611ced8b610490565b611d09611a806110d56008611d035f9d8e610313565b0161077f565b14611bf4565b89019861147c611d216115138c6104b4565b611c4c565b85611dfd565b956110da565b611d4f600b611d418484610313565b01611174866117c3836104a1565b80808086611d64611d5f88610346565b610346565b828215611db1575bf115611dac576115ed611da26115d17f24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb793610306565b936102aa60405190565b611c91565b506108fc611d6c565b81810292918115918404141715610dfd57565b634e487b7160e01b5f52601260045260245ffd5b8115611deb570490565b611dcd565b91908203918211610dfd57565b90611e47600a61147c61020094611e115f90565b506119b15f95611e53611e29600361147c868b610313565b611e4d611e3d611e37610c64565b83611dba565b611e476064610306565b90611de1565b90611df0565b611dba565b61018490611e6c61136261020060046104a1565b61018490611e894261185161148f610200600561147c875f610313565b61018490611ea6336118d96118cc6102bb60066118c6875f610313565b5f611eb9611bc8600861144b8585610313565b611edc611e3d611ece600361147c8686610313565b611ed6610c64565b90611dba565b908080808085611ef7611d5f611d5f60066118c68c87610313565b828215611f27575bf115611dac576003611f176101849461117493610313565b0191611f22836104a1565b611df0565b506108fc611eff565b61018490611e58565b906102009291611f55611f4f61020060046104a1565b83611364565b505f9190611f6b611513600861144b8487610313565b8015611f8b575b611f8057610200925061202f565b505061020090610306565b50611fa161151361150e84610387856002610313565b611f72565b61020091905f611f39565b9061018461201d6003611fc26115fc565b94611fdc611fcf8261047a565b6001600160a01b03168752565b611ff1611fe882610490565b15156020880152565b612007612000600183016104a1565b6040880152565b61144b612016600283016104a1565b6060880152565b15156080840152565b61020090611fb1565b9061205b612050611cc5612061936120445f90565b50610387866003610313565b611a6d846001610313565b50612026565b9061206f6020830151151590565b5f90612086611a806110d56008611d038787610313565b141580156120b4575b6120a857506120a2604061020093015190565b90611dfd565b90506102009150610306565b506080830151151561208f565b602090818080808080808080808080806120d9610f37565b9e8f60608152015f8152015f8152015f8152015f8152015f8152015f8152015f81520160608152015f8152015f8152015f8152015f8152015f905250565b6102006120c1565b90612143959493929161213e61213861020060046104a1565b86611364565b61228a565b90919293565b90610184612279600b61215a610f37565b9461216b6121678261073c565b8752565b61218161217a600183016104a1565b6020880152565b612190612000600283016104a1565b61219f612016600383016104a1565b6121b56121ae600483016104a1565b6080880152565b6121cb6121c4600583016104a1565b60a0880152565b6121e36121da600683016104b4565b151560c0880152565b6122026121f260068301610769565b6001600160a01b031660e0880152565b6122196122116007830161073c565b610100880152565b612232612228600883016104b4565b1515610120880152565b61224b6122416008830161077f565b1515610140880152565b61226261225a600983016104a1565b610160880152565b61147c612271600a83016104a1565b610180880152565b6101a0840152565b61020090612149565b959394955050505061229c825f610313565b906122d06122ca61150e6122b461172b876001610313565b966103876122c28289611fa6565b976002610313565b92612281565b93929190565b90612143916122e3612117565b5f805f9261211f565b9061020091612301611f4f61020060046104a1565b6102009161172b91506001610313565b610200905f6122ec565b9061233c929161233761233161020060046104a1565b84611364565b612340565b9091565b5061233c919050612357565b61233c905f8061231b565b5f9182916001908161236c61172b8383610313565b915f9261237884610306565b945b612386575b5050505050565b90919293966123928290565b8810156123e3576123ab85611a728a611a6d8789610313565b156123cd57906123c46123be8593610def565b98610def565b9493929161237a565b9695906123c46123dd8593610def565b97610def565b9661237f565b61020060046104a1565b9061020091612408611f4f61020060046104a1565b612492565b67ffffffffffffffff811161016b5760208091020190565b906124326101c28361240d565b918252565b90612440825490565b61244981612425565b9261245b60208501915f5260205f2090565b5f915b83831061246b5750505050565b6004602060019261247b85612026565b81520192019201919061245e565b61020090612437565b610200916124a291506001610313565b612489565b6102009060606123f3565b90610200916124c7611f4f61020060046104a1565b6124d5565b6102009061073c565b6124e661020092600792505f610313565b016124cc565b6102009060606124b256fea264697066735822122043412dbe52f5d90b7700ed7ac3fb0155351ac25b1ec99ea4edcb2246740046fe64736f6c63430008140033";

  
      type EscrowPoolConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: EscrowPoolConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class EscrowPool__factory extends ContractFactory {
    
      constructor(...args: EscrowPoolConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<EscrowPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): EscrowPool__factory {
      return super.connect(runner) as EscrowPool__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): EscrowPoolInterface {
      return new Interface(_abi) as EscrowPoolInterface;
    }
    
    override attach(address: string | Addressable): EscrowPool {
      return super.attach(address) as EscrowPool;
    }
  static connect(address: string, runner?: ContractRunner | null): EscrowPool {
      return new Contract(address, _abi, runner) as unknown as EscrowPool;
    }
  }

  
  